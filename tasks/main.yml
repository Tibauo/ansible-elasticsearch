---
# tasks file for elasticsearch
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Check folder exists
  stat:
    path: "{{ elasticsearch_path }}/{{ elasticsearch_folder }}"
  register: folder_elasticsearch

- name: Install Java
  become: yes
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ required_package }}"
  when: folder_elasticsearch.stat.exists == False

- name: Create group
  become: yes
  group:
    name: "{{ elasticsearch_group }}"
    state: present
    system: yes
  when: folder_elasticsearch.stat.exists == False

- name: Create user
  become: yes
  user:
    name: "{{ elasticsearch_user }}"
    state: present
    system: yes
  when: folder_elasticsearch.stat.exists == False

- name: set vm.max_map_count in sysctl
  become: yes
  sysctl: name={{ item.key }} value={{ item.value }}
  with_items:
    - { key: "vm.max_map_count", value: "{{ vm_max_map_count }}" }
  when: folder_elasticsearch.stat.exists == False

- name: Configure limits
  become: yes
  lineinfile:
    path: /etc/security/limits.conf
    line: '{{ elasticsearch_user }} -  nofile  {{ ulimit_number }}'
  when: folder_elasticsearch.stat.exists == False

- name: Get elasticsearch
  become: yes
  unarchive:
    src: "{{ elasticsearch_dl }}"
    dest: "{{ elasticsearch_path }}"
    remote_src: yes
  when: folder_elasticsearch.stat.exists == False

- name: jvm option
  become: yes
  template:
    src: jvm.options.j2
    dest: "{{ elasticsearch_path }}/{{ elasticsearch_folder }}/config/jvm.options"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  when: folder_elasticsearch.stat.exists == False

- name: Set user as owner
  become: yes
  file:
    path: "{{ elasticsearch_path }}/{{ elasticsearch_folder }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    recurse: yes
  when: folder_elasticsearch.stat.exists == False

- name: Create elasticsearch config
  become: yes
  template:
    src: elasticsearch.yml.j2
    dest: "{{ elasticsearch_path }}/{{ elasticsearch_folder }}/config/elasticsearch.yml"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  when: folder_elasticsearch.stat.exists == False

- name: Create systemd
  become: yes
  template:
    src: elasticsearch.service.j2
    dest: /etc/systemd/system/elasticsearch.service
  when: folder_elasticsearch.stat.exists == False

- name: Start Service
  become: yes
  systemd:
    name: elasticsearch
    state: started
    enabled: yes
    daemon_reload: yes
  when: folder_elasticsearch.stat.exists == False
